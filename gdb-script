define __dump_memory_region
  set $indent = $arg1
  while $indent
    printf "  "
    set $indent = $indent - 1
  end

  set $mr_dump = (MemoryRegion*)$arg0
  printf "[%016x-%x%016x]:%s\n", $mr_dump->addr, \
          *((unsigned long long*)&$mr_dump->size + 1) , \
          $mr_dump->addr + *(unsigned long long*)&$mr_dump->size, \
          $mr_dump->name
end

define __dump_memory_regions
  set $pmr = (MemoryRegion*)$arg0
  __dump_memory_region $pmr $arg1
  set $level = $arg1 + 1

  set $pmr = $pmr->subregions.tqh_first
  while $pmr != $arg0
    __dump_memory_region $pmr $level

    # iterate chile if has
    if $pmr->subregions.tqh_first
      set $level = $level + 1
      set $pmr = $pmr->subregions.tqh_first
    # iterate sibling if has
    else
      if $pmr->subregions_link.tqe_next
      set $pmr = $pmr->subregions_link.tqe_next
      # go back to uncle
      else
        while $pmr->container
          set $level = $level - 1
          if $pmr->container->subregions_link.tqe_next
            set $pmr = $pmr->container->subregions_link.tqe_next
            loop_break
          else
            set $pmr = $pmr->container
          end
        end
      end
    end
  end
end

define dump_memory_region
  set $root_mr = (MemoryRegion*)$arg0
  printf "Dump MemoryRegion:%s\n", $root_mr->name
  __dump_memory_regions $root_mr 0
end

document dump_memory_region
Dump a memory region info:

    dump_memory_region system_memory
end

define dump_flatview
  set $i = 0
  while $i < $arg0->nr
    printf "[%x%016x-%x%016x], offset %016x\n", \
	    *((unsigned long long*)&$arg0->ranges[$i].addr.start + 1), \
	    *(unsigned long long*)&$arg0->ranges[$i].addr.start, \
	    *((unsigned long long*)&$arg0->ranges[$i].addr.size + 1), \
	    *(unsigned long long*)&$arg0->ranges[$i].addr.start + *(unsigned long long*)&$arg0->ranges[$i].addr.size, \
            $arg0->ranges[$i].offset_in_region

    set $i = $i + 1
  end
end

define dump_address_spaces
  set $as = address_spaces.tqh_first
  while $as
    printf "%s\n", $as->name
    if $arg0 && $as->root
      __dump_memory_region $as->root 1
    end
    set $as = $as->address_spaces_link.tqe_next
  end
end
